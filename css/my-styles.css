/* Do not edit my-styles.css 
edit my-styles.scss in thesasss directory and run
py setup.py build_sass */
/* Do not edit colours.css 
edit colours.scss in the sass directory and run
py setup.py build_sass */
/* colours */
/* Do not edit fonts.css 
edit fonts.scss in the sass directory and run
py setup.py build_sass */
html {
  font-size: 16px; }

/* Do not edit media-queries.css 
edit media-queries.scss in the sass directory and run
py setup.py build_sass */
html.debug body:before {
  content: 'S';
  background: rgba(200, 0, 0, 0.5);
  color: white;
  width: 80px;
  height: 26px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  text-align: center;
  border-radius: 0 0 12px 0; }

@media (min-width: 580px) {
  html.debug body:before {
    content: 'S (P)'; } }
  @media screen and (min-width: 580px) and (orientation: landscape) {
    html.debug body:before {
      content: 'S (L)'; } }
@media (min-width: 760px) {
  html.debug body:before {
    content: 'M (P)'; } }
  @media screen and (min-width: 760px) and (orientation: landscape) {
    html.debug body:before {
      content: 'M (L)'; } }
@media (min-width: 960px) {
  html.debug body:before {
    content: 'L (P)'; } }
  @media screen and (min-width: 960px) and (orientation: landscape) {
    html.debug body:before {
      content: 'L (L)'; } }
@media (min-width: 1024px) {
  html.debug body:before {
    content: 'XL (P)'; } }
  @media screen and (min-width: 1024px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XL (L)'; } }
@media (min-width: 1260px) {
  html.debug body:before {
    content: 'XXL (P)'; } }
  @media screen and (min-width: 1260px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XXL (L)'; } }
/*
header.scss
*/
/* Do not edit colours.css 
edit colours.scss in the sass directory and run
py setup.py build_sass */
/* colours */
/* Do not edit media-queries.css 
edit media-queries.scss in the sass directory and run
py setup.py build_sass */
html.debug body:before {
  content: 'S';
  background: rgba(200, 0, 0, 0.5);
  color: white;
  width: 80px;
  height: 26px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  text-align: center;
  border-radius: 0 0 12px 0; }

@media (min-width: 580px) {
  html.debug body:before {
    content: 'S (P)'; } }
  @media screen and (min-width: 580px) and (orientation: landscape) {
    html.debug body:before {
      content: 'S (L)'; } }
@media (min-width: 760px) {
  html.debug body:before {
    content: 'M (P)'; } }
  @media screen and (min-width: 760px) and (orientation: landscape) {
    html.debug body:before {
      content: 'M (L)'; } }
@media (min-width: 960px) {
  html.debug body:before {
    content: 'L (P)'; } }
  @media screen and (min-width: 960px) and (orientation: landscape) {
    html.debug body:before {
      content: 'L (L)'; } }
@media (min-width: 1024px) {
  html.debug body:before {
    content: 'XL (P)'; } }
  @media screen and (min-width: 1024px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XL (L)'; } }
@media (min-width: 1260px) {
  html.debug body:before {
    content: 'XXL (P)'; } }
  @media screen and (min-width: 1260px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XXL (L)'; } }
/* Do not edit fonts.css 
edit fonts.scss in the sass directory and run
py setup.py build_sass */
html {
  font-size: 16px; }

header {
  background-color: #1e2844;
  border-bottom: white 1px solid;
  width: 100%;
  left: 0;
  top: 0;
  position: relative;
  display: flex;
  justify-content: space-around;
  font-family: "Roboto", sans-serif; }
  header div {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-around; }
    header div a {
      cursor: pointer;
      line-height: initial; }
    header div .logo {
      width: 180px;
      display: block; }
    header div ul {
      text-align: center;
      display: flex;
      justify-content: space-around;
      list-style: none;
      margin: 0;
      padding: 0; }
      header div ul li {
        margin: 0;
        line-height: initial; }
        header div ul li a {
          font-weight: 100;
          font-size: 1rem;
          padding: 0 2vw; }
          header div ul li a:link, header div ul li a:visited, header div ul li a:hover, header div ul li a:active, header div ul li a:focus {
            color: #f7f7f7;
            text-decoration: none; }

@media (min-width: 760px) {
  header div.corset {
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-around; } }

@media screen and (min-width: 760px) and (orientation: landscape) {
  header div.corset {
    flex-wrap: nowrap;
    align-items: center;
    justify-content: space-between; } }

@media (min-width: 960px) {
  header div.corset {
    flex-wrap: nowrap;
    align-items: center;
    justify-content: space-between; }
    header div.corset nav ul {
      justify-content: space-between; }
      header div.corset nav ul li {
        margin: 0;
        text-align: center; }
        header div.corset nav ul li a {
          font-size: 1rem;
          padding: 0 2vw; } }

@media (min-width: 1024px) {
  header div.corset nav ul li a {
    font-size: 1.2rem;
    padding: 0 2vw; } }

@media (min-width: 1260px) {
  header div.corset nav ul li a {
    font-size: 1.2rem;
    padding: 0 1.6vw; } }

/*
footer.scss
*/
/* Do not edit colours.css 
edit colours.scss in the sass directory and run
py setup.py build_sass */
/* colours */
/* Do not edit media-queries.css 
edit media-queries.scss in the sass directory and run
py setup.py build_sass */
html.debug body:before {
  content: 'S';
  background: rgba(200, 0, 0, 0.5);
  color: white;
  width: 80px;
  height: 26px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  text-align: center;
  border-radius: 0 0 12px 0; }

@media (min-width: 580px) {
  html.debug body:before {
    content: 'S (P)'; } }
  @media screen and (min-width: 580px) and (orientation: landscape) {
    html.debug body:before {
      content: 'S (L)'; } }
@media (min-width: 760px) {
  html.debug body:before {
    content: 'M (P)'; } }
  @media screen and (min-width: 760px) and (orientation: landscape) {
    html.debug body:before {
      content: 'M (L)'; } }
@media (min-width: 960px) {
  html.debug body:before {
    content: 'L (P)'; } }
  @media screen and (min-width: 960px) and (orientation: landscape) {
    html.debug body:before {
      content: 'L (L)'; } }
@media (min-width: 1024px) {
  html.debug body:before {
    content: 'XL (P)'; } }
  @media screen and (min-width: 1024px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XL (L)'; } }
@media (min-width: 1260px) {
  html.debug body:before {
    content: 'XXL (P)'; } }
  @media screen and (min-width: 1260px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XXL (L)'; } }
/*
variables.scss
*/
/* Do not edit media-queries.css 
edit media-queries.scss in the sass directory and run
py setup.py build_sass */
html.debug body:before {
  content: 'S';
  background: rgba(200, 0, 0, 0.5);
  color: white;
  width: 80px;
  height: 26px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  text-align: center;
  border-radius: 0 0 12px 0; }

@media (min-width: 580px) {
  html.debug body:before {
    content: 'S (P)'; } }
  @media screen and (min-width: 580px) and (orientation: landscape) {
    html.debug body:before {
      content: 'S (L)'; } }
@media (min-width: 760px) {
  html.debug body:before {
    content: 'M (P)'; } }
  @media screen and (min-width: 760px) and (orientation: landscape) {
    html.debug body:before {
      content: 'M (L)'; } }
@media (min-width: 960px) {
  html.debug body:before {
    content: 'L (P)'; } }
  @media screen and (min-width: 960px) and (orientation: landscape) {
    html.debug body:before {
      content: 'L (L)'; } }
@media (min-width: 1024px) {
  html.debug body:before {
    content: 'XL (P)'; } }
  @media screen and (min-width: 1024px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XL (L)'; } }
@media (min-width: 1260px) {
  html.debug body:before {
    content: 'XXL (P)'; } }
  @media screen and (min-width: 1260px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XXL (L)'; } }
footer {
  background-color: #0d0d0d;
  height: 100px;
  padding: 20px;
  border-top: 1px solid white;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: absolute;
  bottom: 0;
  left: 0;
  color: white; }
  footer .logo {
    width: 280px; }
  footer a {
    color: white; }
  footer .corset {
    display: flex;
    width: 100%; }
  footer .col-1,
  footer .col-2 {
    width: 50%; }
  footer .col-2 {
    text-align: right;
    font-size: 0.8rem; }
    footer .col-2 a {
      text-decoration: none; }
      footer .col-2 a:link, footer .col-2 a:visited, footer .col-2 a:hover, footer .col-2 a:active {
        color: white; }
  footer .social {
    display: flex;
    justify-content: space-between;
    width: 80%; }

@media (min-width: 580px) {
  footer .social {
    width: 60%; }
  footer .col-2 {
    font-size: 1rem; } }

@media (min-width: 760px) {
  footer .social {
    width: 50%; } }

/*
layout.scss
*/
/*
variables.scss
*/
/* Do not edit media-queries.css 
edit media-queries.scss in the sass directory and run
py setup.py build_sass */
html.debug body:before {
  content: 'S';
  background: rgba(200, 0, 0, 0.5);
  color: white;
  width: 80px;
  height: 26px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  text-align: center;
  border-radius: 0 0 12px 0; }

@media (min-width: 580px) {
  html.debug body:before {
    content: 'S (P)'; } }
  @media screen and (min-width: 580px) and (orientation: landscape) {
    html.debug body:before {
      content: 'S (L)'; } }
@media (min-width: 760px) {
  html.debug body:before {
    content: 'M (P)'; } }
  @media screen and (min-width: 760px) and (orientation: landscape) {
    html.debug body:before {
      content: 'M (L)'; } }
@media (min-width: 960px) {
  html.debug body:before {
    content: 'L (P)'; } }
  @media screen and (min-width: 960px) and (orientation: landscape) {
    html.debug body:before {
      content: 'L (L)'; } }
@media (min-width: 1024px) {
  html.debug body:before {
    content: 'XL (P)'; } }
  @media screen and (min-width: 1024px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XL (L)'; } }
@media (min-width: 1260px) {
  html.debug body:before {
    content: 'XXL (P)'; } }
  @media screen and (min-width: 1260px) and (orientation: landscape) {
    html.debug body:before {
      content: 'XXL (L)'; } }
/* Do not edit colours.css 
edit colours.scss in the sass directory and run
py setup.py build_sass */
/* colours */
html.debug .corset,
html.debug .inner,
html.debug .logo,
html.debug nav ul li,
html.debug nav ul li a {
  box-shadow: 0 0 8px white inset; }

#root,
#page-container,
#content-wrap {
  width: 100%; }

#hamburger {
  width: 32px;
  height: 32px;
  display: block;
  position: absolute;
  left: 50px;
  top: 50px;
  margin: -16px 0 -16px;
  z-index: 99;
  font-size: 1.2rem;
  background-color: #f0f0f0;
  border-color: #d8d8d8 #d1d1d1 #bababa;
  border-width: 1px;
  border-style: solid;
  cursor: pointer; }
  #hamburger i {
    cursor: pointer; }
    #hamburger i.fa-times {
      display: none; }
    #hamburger i.fa-bars {
      display: block; }

#qst {
  grid-row-gap: 8px;
  grid-column-gap: 8px; }
  #qst .item1 {
    grid-column: 1 / span 3;
    grid-row: 1;
    border: solid 1px lightgrey;
    background-color: #1e2844;
    margin: 0; }
    #qst .item1 h4 {
      padding-top: 10vh;
      font-size: 24px;
      font-weight: 100;
      font-weight: 400;
      color: white; }
  #qst #ledg,
  #qst #aea,
  #qst #run {
    grid-column-start: 1;
    grid-column-end: 3;
    width: 100%;
    border: solid 1px #e3f9fc;
    border-radius: 3px;
    background: #e3f9fc;
    color: black;
    margin: 0; }
    #qst #ledg:hover,
    #qst #aea:hover,
    #qst #run:hover {
      font-weight: 400; }

#page-container {
  position: relative;
  min-height: 100vh; }

#content-wrap {
  padding-bottom: 100px; }

.corset,
#popup {
  max-width: 96vw;
  width: 96vw;
  margin: auto; }

section {
  padding-bottom: 6vh;
  position: relative; }

header {
  height: 100px; }

/* Side menu */
html #book-search-input {
  max-width: 770px;
  margin-left: auto;
  margin-right: auto; }

html .book-summary {
  position: relative;
  float: none;
  margin-top: 0;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100vw;
  display: none;
  overflow-y: visible;
  cursor: pointer; }
  html .book-summary > div {
    left: 0;
    width: 100vw;
    background: white;
    overflow: hidden; }

html .book-body {
  margin-left: auto; }

html.show-side-menu #book-search-input {
  display: none; }

html.show-side-menu .book-summary {
  display: block; }

html.show-side-menu .book-body {
  display: none; }

html.show-side-menu #hamburger i.fa-times {
  display: block; }

html.show-side-menu #hamburger i.fa-bars {
  display: none; }

@media screen and (orientation: landscape) {
  header {
    height: 28vh; }
  #qst #aea {
    grid-row: 2;
    grid-column: 1; }
  #qst #ledg {
    grid-row: 2;
    grid-column: 2; }
  #qst #run {
    grid-row: 2;
    grid-column: 3; } }

@media (min-width: 580px) {
  .corset,
  #popup {
    max-width: 80vw;
    margin: auto;
    position: relative; }
  header {
    height: 100px;
    font-size: 0.8rem; }
    header div ul li a {
      font-size: 1.2rem; }
  #qst #aea {
    grid-row: 2;
    grid-column: 1; }
  #qst #ledg {
    grid-row: 2;
    grid-column: 2; }
  #qst #run {
    grid-row: 2;
    grid-column: 3; } }

@media screen and (min-width: 580px) and (orientation: landscape) {
  header {
    height: 28vh; } }

@media (min-width: 760px) {
  .corset {
    max-width: 80vw;
    margin: auto;
    position: relative; }
  header {
    height: 100px; } }

@media screen and (min-width: 760px) and (orientation: landscape) {
  header {
    height: 28vh; } }

@media (min-width: 960px) {
  header {
    height: 10vh; }
  #hamburger {
    display: none; }
  html #book-search-input {
    max-width: none;
    margin-left: initial;
    margin-right: initial; }
  html .book {
    display: grid;
    grid-template-columns: 300px;
    height: auto;
    overflow: initial; }
    html .book #book-search-input {
      max-width: none;
      grid-row-start: 1;
      grid-column-start: 1;
      grid-column-end: 3; }
    html .book-summary {
      background: transparent;
      grid-row-start: 2;
      grid-column-start: 1;
      position: relative;
      background: white;
      width: auto;
      display: block; }
      html .book-summary > div {
        position: relative;
        top: 0;
        max-height: none;
        box-shadow: none;
        transform: none;
        overflow: visible;
        width: auto; }
    html .book-body {
      grid-row-start: 2;
      grid-column-start: 2;
      margin-left: 0;
      display: block; } }

@media (min-width: 1260px) {
  .corset,
  #popup {
    max-width: 1200px;
    width: 1200px; } }

.markdown-section .admonition {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
  position: relative;
  margin: 1.5625em 3px 1.5625em 0;
  padding: 0 0.6rem;
  border-left-width: 0.2rem;
  border-left-style: solid;
  border-radius: 0.1rem;
  overflow: auto; }
  .markdown-section .admonition.tip .admonition-title, .markdown-section .admonition.note .admonition-title {
    margin: 0 -0.6rem;
    padding: 0.4rem 0.6rem 0.4rem 2rem;
    font-weight: 700; }
    .markdown-section .admonition.tip .admonition-title:before, .markdown-section .admonition.note .admonition-title:before {
      position: absolute;
      left: 0.6rem;
      font-size: 1rem;
      font-family: 'Material Icons';
      line-height: 20px; }
  .markdown-section .admonition.tip p, .markdown-section .admonition.note p {
    margin: 1em 0; }
  .markdown-section .admonition.tip {
    border-left-color: #00bfa5; }
    .markdown-section .admonition.tip .admonition-title {
      border-bottom-color: rgba(0, 191, 165, 0.1);
      background-color: rgba(0, 191, 165, 0.1); }
      .markdown-section .admonition.tip .admonition-title:before {
        color: #00bfa5;
        content: '\E80E'; }
  .markdown-section .admonition.note {
    border-left-color: #448aff; }
    .markdown-section .admonition.note .admonition-title {
      border-bottom: 0.05rem solid rgba(68, 138, 255, 0.1);
      background-color: rgba(68, 138, 255, 0.1); }
      .markdown-section .admonition.note .admonition-title:before {
        color: #448aff;
        content: '\E3C9'; }

code {
  background-color: #0083fb; }

/* Search styling begin */
#mkdocs-search-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 2vh 0;
  z-index: 100;
  display: none;
  align-items: center;
  padding: 0;
  font-size: 1rem; }
  #mkdocs-search-wrapper .search-results-container {
    background: pink;
    width: 80vw;
    margin: auto 10vw;
    box-shadow: 0 8px 8px rgba(0, 0, 0, 0.2); }
    #mkdocs-search-wrapper .search-results-container header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 4px 2vw;
      margin: 0px 28px 0 0;
      font-size: 1.2rem;
      color: #5887da;
      width: 100%;
      background: white;
      border-bottom: 1px solid #d1dbe0;
      height: 3.3rem; }
      #mkdocs-search-wrapper .search-results-container header input {
        width: 40%;
        max-width: 40%;
        border: 1px solid #0d0d0d;
        color: #33383e;
        font-size: 1.2rem;
        padding: 6px; }
      #mkdocs-search-wrapper .search-results-container header button {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: black;
        font-size: 2.2rem;
        line-height: 0;
        font-weight: bold; }

@media (min-width: 760px) {
  #mkdocs-search-wrapper .search-results-container header {
    font-size: 2rem; } }

#mkdocs-search-results {
  height: 80vh;
  overflow-y: auto;
  position: relative;
  padding: 2vh 0 0;
  background-color: white;
  min-width: 80vw; }
  #mkdocs-search-results > p,
  #mkdocs-search-results article {
    background-color: white;
    padding: 4px 2vw; }
  #mkdocs-search-results > p {
    margin: 4vh 0;
    font-size: 1rem;
    color: #5887da;
    font-weight: 500; }

#mkdocs-search-query,
#mkdocs-search-query:hover {
  padding-left: 20px;
  position: relative; }

#mkdocs-search-query.pop-over, #mkdocs-search-query.pop-over:focus, #mkdocs-search-query.pop-over:hover {
  position: fixed;
  z-index: 2;
  top: 10vh;
  left: 12vw;
  margin: 15px 0 0 316px;
  border: 1px solid #0d0d0d;
  width: 200px;
  background-color: #dfdfdf; }

.page-wrapper {
  position: relative;
  outline: 0;
  overflow: hidden; }

.bottomnav {
  width: inherit;
  display: flex;
  justify-content: space-between;
  overflow: hidden;
  margin-bottom: 60px;
  padding: 0 65px; }

.button.left,
.button.right {
  color: white;
  background-color: darkblue;
  min-width: 100px;
  max-width: 30%;
  border-radius: 4px;
  text-overflow: ellipsis;
  text-decoration: none; }
  .button.left:hover,
  .button.right:hover {
    background-color: blue; }

*,
:after,
:before {
  box-sizing: border-box;
  outline: 0 !important; }

.parent {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(5, 1fr);
  grid-column-gap: 0px;
  grid-row-gap: 0px; }

.hasborder {
  border: 1px solid ligthgray; }

.p17 {
  font-size: 17px;
  font-weight: 300; }

.highlight {
  font-size: 15px; }

a {
  font-weight: 400; }

.grid-box {
  border: 1px solid black; }

.div1 {
  grid-area: 1 / 1 / 2 / 2;
  column-span: 2; }

.div2 {
  grid-area: 1 / 1 / 2 / 3; }

.div3 {
  grid-area: 2 / 1 / 3 / 2; }

.div4 {
  grid-area: 2 / 2 / 3 / 3; }

.div5 {
  grid-area: 3 / 1 / 4 / 2; }

.div6 {
  grid-area: 3 / 1 / 4 / 3; }

.div7 {
  grid-area: 4 / 1 / 5 / 3; }

.summary > ul {
  list-style-type: none;
  padding: 0;
  list-style-type: none; }

.summary > li {
  list-style: none;
  font-weight: bold; }

ul > .multi::after {
  content: ' +'; }

ul > .multi-opened::after {
  content: ' -'; }

select {
  text-transform: none;
  width: 200px; }

.markdown-section h1 {
  font-size: 2em;
  font-weight: 400; }

.markdown-section h2 {
  font-size: 1.75em;
  font-weight: 400; }

.markdown-section h3 {
  font-size: 1.25em;
  font-weight: 400; }

.version {
  padding-bottom: 10px;
  padding-left: 15px;
  width: 100%; }

/* GRID to be tidied*/
.grid-container {
  display: grid;
  grid-gap: 1px;
  width: inherit;
  margin: 0 auto;
  height: 100%; }
  .grid-container p {
    font-size: 17px;
    font-weight: 300; }
  .grid-container h1 {
    font-weight: 200; }
  .grid-container h2 {
    text-align: center; }
  .grid-container h3 {
    font-weight: 200; }

.grid-item {
  padding: 20px;
  padding-bottom: 40px;
  margin: 4px;
  color: #222; }

.no-padding {
  padding: unset; }

.item_whole_row {
  grid-column: 1 / span 3; }

.dropdown-content {
  margin-top: 15px; }

.dropdown-content a {
  background-color: #eee;
  border: 1px solid #ddd;
  border-radius: 3px;
  height: 18px;
  padding: 4px;
  color: #555;
  text-decoration: none; }
  .dropdown-content a:hover {
    background-color: #ddd;
    border: 1px solid #ccc;
    border-radius: 3px;
    height: 18px;
    padding: 4px;
    text-decoration: none; }

nav#nav .head {
  cursor: pointer;
  font-family: "Roboto", sans-serif;
  font-weight: 300; }
  nav#nav .head :hover {
    text-decoration: underline; }

nav#nav li .head,
nav#nav li a {
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  font-size: 20px;
  color: #222; }
  nav#nav li .head.highlight,
  nav#nav li a.highlight {
    background: #3d528b;
    color: white;
    font-weight: bold; }

nav#nav li li .head,
nav#nav li li a {
  font-size: 18px; }

nav#nav li li li .head,
nav#nav li li li a {
  font-size: 16px; }

nav#nav > ul ul {
  max-height: 0;
  transition: max-height 1s;
  overflow: hidden; }
  nav#nav > ul ul.show {
    transition: max-height 1s;
    max-height: 2000px; }
